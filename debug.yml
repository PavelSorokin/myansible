- hosts: patroni_cluster
  gather_facts: yes
  become: false
  tasks:

  # - name: restart postgresql patroni
  #   uri:
  #     url: "http://{{ postgresql_ip }}:{{ postgresql_restapi_port }}/restart"
  #     method: POST
  #   run_once: true
    
  - name: reload postgresql patroni
    uri:
      url: "http://{{ postgresql_ip }}:{{ postgresql_restapi_port }}/status"
      method: GET
      status_code: 202
    run_once: true

  # - name: update postgresql config
  #   uri:
  #     url: "http://{{ postgresql_ip }}:{{ postgresql_restapi_port }}/config"
  #     method: PATCH
  #     body: "{{ postgresql_parameters_post }}"
  #     return_content: yes
  #     body_format: json
  #   run_once: true

  # - name: Distribution
  #   debug: msg="{{ ansible_distribution }}"
  # - name: Distribution version
  #   debug: msg="{{ ansible_distribution_version}}"
  # - name: Distribution major version
  #   debug: msg="{{ ansible_distribution_major_version }}"
  # - name: Distribution major version
  #   debug: msg="{{ ansible_all_ipv4_addresses }}"
  # - name: Distribution major version
  #   debug: msg="{{ ansible_default_ipv4.address }}"
  # - name: Distribution major version
  #   debug: msg="{{ ansible_eth1.ipv4.address }}"  
  # - name: unicast
  #   debug: msg="{% set ns = {{interface_var_name}} %}{% for host in groups['patroni_cluster'] %}{% if host ==  ns %}:(host was {{ hostvars[host]['inventory_hostname'] }}) {{hostvars[host]['inventory_hostname']}} {% endif %} {% endfor %}"
  #   vars:
  #     interface_var_name: "{{ ansible_default_ipv4.address }}"

