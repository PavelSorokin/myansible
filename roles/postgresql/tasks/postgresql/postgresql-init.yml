- name: check create {{ postgresql_data }}
  stat: path={{ postgresql_data }}
  register: postgresql_data_dir
  changed_when: false
  tags:
    - postgresql::init

- name: create folder postgresql data
  become_user: root
  file:
    path: "{{ postgresql_data }}"
    state: directory
    owner: postgres
    group: postgres
    mode: 0700
  tags:
    - postgresql::init

# Init for Debian
- block:
    - name: initdb postgresql {{ postgresql_version }}
      command: "/usr/bin/pg_createcluster -d {{ postgresql_data }} -s {{ postgresql_unix_socket_dir }} -l {{ postgresql_log }} -p {{ postgresql_port }} {{ postgresql_version }} main"
      args:
        chdir: "{{ postgresql_data }}/"
        creates: PG_VERSION

    - name: configure global postgresql.conf settings
      lineinfile:
        dest: "{{ postgresql_conf }}/postgresql.conf"
        regexp: "^#?{{ item.option }}.+$"
        line: "{{ item.option }} = '{{ item.value }}'"
        state: "{{ item.state | default('present') }}"
        mode: 0644
      with_items: "{{ postgresql_global_conf }}"
      notify: start postgresql
  when:
    - ansible_os_family == "Debian"
    - postgresql_data_dir.stat.exists == false
  tags:
    - postgresql::init

- block:
    - name: stop service PostgreSQL {{ postgresql_version }}
      systemd:
        name: "{{ postgresql_service }}"
        state: stopped
        enabled: no
        daemon_reload: yes

    - name: remove directory
      file:
        path: "/var/lib/pgsql/{{ postgresql_version }}"
        state: absent

    - name: initdb postgresql {{ postgresql_version }}
      become: true
      become_user: postgres
      command: "{{ postgresql_bin }}/initdb -D {{ postgresql_data }} -k"
      args:
        chdir: "{{ postgresql_data }}/"
        creates: PG_VERSION

    - name: configure global postgresql.conf settings
      lineinfile:
        dest: "{{ postgresql_conf }}/postgresql.conf"
        regexp: "^#?{{ item.option }}.+$"
        line: "{{ item.option }} = '{{ item.value }}'"
        state: "{{ item.state | default('present') }}"
        mode: 0644
      with_items: "{{ postgresql_global_conf }}"
      notify: start postgresql
  when:
    - ansible_os_family == "RedHat"
    - postgresql_data_dir.stat.exists == false
  tags:
    - postgresql::init
